<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>net.niconomicon</groupId>
	<name>PDF-JRasterizer</name>
	<artifactId>pdf-jrasterizer</artifactId>
	<version>0.0.5</version>
	<url>http://www.niconomicon.net/tests/maven/net/niconomicon/pdf-jrasterizer/</url>
	<dependencies>
		<dependency>
			<groupId>net.java.dev</groupId>
			<artifactId>pdf-renderer</artifactId>
			<version>1.6.2</version>
		</dependency>
	</dependencies>
	<distributionManagement>
		<repository>
			<id>niconomicon.repo</id>
			<url>scp://ssh.phx.nearlyfreespeech.net/home/public/tests/maven</url>
		</repository>
	</distributionManagement>
	<build>
		<sourceDirectory>src/java</sourceDirectory>
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh-external</artifactId>
			</extension>
		</extensions>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.1</version>
			</plugin>
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-assembly-plugin</artifactId> 
				<configuration> <descriptorRefs> <descriptorRef>jar-with-dependencies</descriptorRef> 
				</descriptorRefs> <archive> <manifest> <mainClass>net.niconomicon.jrasterizer.PDFRasterizerGUI</mainClass> 
				</manifest> </archive> </configuration> <executions> <execution> <phase>package</phase> 
				<goals> <goal>single</goal> </goals> </execution> </executions> </plugin> -->
			<!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>appassembler-maven-plugin</artifactId> 
				<configuration> <includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath> 
				<binPrefix>niconomicon</binPrefix> <assembleDirectory>${project.build.directory}/scripts</assembleDirectory> 
				<extraJvmArguments>-Xms1024M -Xmx1024M</extraJvmArguments> <platforms> <platform>windows</platform> 
				<platform>unix</platform> </platforms> <programs> <program> <mainClass>net.niconomicon.jrasterizer.PDFRasterizerGUI</mainClass> 
				<name>rasterizerGUI</name> </program> </programs> </configuration> </plugin> -->
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-jarsigner-plugin</artifactId> 
				<!- <version></version> -> <configuration> <keystore>/Users/niko/keystore_jnlp/testKyStore</keystore> 
				<alias>niko</alias> <storepass>ch4r4ct3rs</storepass> <keypass>ch4r4ct3rs</keypass> 
				</configuration> <executions> <execution> <id>sign-jars</id> <phase>package</phase> 
				<goals> <goal>sign</goal> </goals> </execution> <execution> <id>verify-jars</id> 
				<phase>verify</phase> <goals> <goal>verify</goal> </goals> </execution> </executions> 
				</plugin> -->
			<plugin>
				<groupId>org.codehaus.mojo.webstart</groupId>
				<artifactId>webstart-maven-plugin</artifactId>				
				<executions>
					<execution>
						<goals>
							<goal>jnlp</goal> <!-- use jnlp, jnlp-inline or jnlp-single as appropriate -->
						</goals>
					</execution>
				</executions>
				<configuration>
					<excludeTransitive>false</excludeTransitive>
					<libPath>lib</libPath>
					<!-- JNLP generation -->
					<jnlp>
						<outputFile>pdf-jrasterizer.jnlp</outputFile> <!-- defaults to launch.jnlp -->
						<mainClass>net.niconomicon.jrasterizer.gui.PDFRasterizerGUI</mainClass>
					</jnlp>
					<sign>
						<keystore>/Users/niko/keystore_jnlp/ks</keystore>
						<alias>edgar</alias>
						<storepass>password</storepass>
						<keypass>password</keypass>
						<!-- we need to override passwords easily from the command line. ${keypass} -->
						<!--storetype>fillme</storetype -->
						<!--validity>fillme</validity -->
						<!-- only required for generating the keystore -->

						<dnameCn>niconomicon.net</dnameCn>
						<dnameOu>engineering</dnameOu>
						<dnameO>niconomicon.net</dnameO>
						<dnameL>Geneva</dnameL>
						<dnameSt>Geneva</dnameSt>
						<dnameC>Switzerland</dnameC>
						
						<!-- verify that the signing operation succeeded -->
						<verify>true</verify> 
						<!-- KEYSTORE MANAGEMENT -->
						<!-- -->
						<keystoreConfig>
							<delete>true</delete> <!-- delete the keystore -->
							<gen>true</gen> <!-- optional shortcut to generate the store. -->
						</keystoreConfig>
					</sign>
					<!-- BUILDING PROCESS -->
					
					<pack200>true</pack200>
					<gzip>true</gzip>
					
					 <!-- default force when pack200 false, true when pack200 selected ?? -->
					<!-- causes a version attribute to be output in each jar resource element, 
						optional, default is false -->
					<outputJarVersions>false</outputJarVersions>
					
					<!--install>false</install --> <!-- not yet supported -->
					<verbose>false</verbose>
					<!-- deploy command : -->
					<!-- scp -r target/jnlp/* nhoibian_niconomicon@ssh.phx.nearlyfreespeech.net:/home/public/tests/maven/net/niconomicon/pdf-jrasterizer/ -->
				</configuration>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>central</id>
			<name>Maven Repository Switchboard</name>
			<layout>default</layout>
			<url>http://repo1.maven.org/maven2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>atlassian-m2-repository</id>
			<name>Atlassian Public Repository</name>
			<url>https://maven.atlassian.com/public</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>twdata-m2-repository</id>
			<name>twdata.org Maven 2 Repository</name>
			<url>http://twdata-m2-repository.googlecode.com/svn/</url>
		</pluginRepository>
		<!-- <pluginRepository> <id>onejar-maven-plugin.googlecode.com</id> <url>http://onejar-maven-plugin.googlecode.com/svn/mavenrepo</url> 
			</pluginRepository> -->
	</pluginRepositories>
</project>
